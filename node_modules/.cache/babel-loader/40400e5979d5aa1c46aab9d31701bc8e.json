{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\ReactApp\\\\ReactAsp.NetCoreWebAPIApp\\\\ReactAsp.NetCoreWebAPIApp.UI\\\\react-app\\\\src\\\\Customer.js\",\n    _s = $RefreshSig$();\n\nimport { Variables } from \"./Variables\";\nimport { React, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Customer() {\n  _s();\n\n  const [customerList, setCustomerList] = useState([]); // this will call when the state is updated everytime\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    fetch('https://randomuser.me/api/', {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      } // no-cors, *cors, same-origin\n\n    }).then(data => setCustomerList(customerList => [...customerList, data.results[0]])); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: nameList.map(aName => {\n          /*#__PURE__*/\n          _jsxDEV(Names, {\n            name: aName.name.first,\n            age: aName.name.last\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Customer, \"Hzpvmgk4sSqjsVv5ZVD40uFUaug=\");\n\n_c = Customer;\nexport default Customer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customer\");","map":{"version":3,"sources":["D:/react/ReactApp/ReactAsp.NetCoreWebAPIApp/ReactAsp.NetCoreWebAPIApp.UI/react-app/src/Customer.js"],"names":["Variables","React","useEffect","useState","Customer","customerList","setCustomerList","fetch","method","mode","headers","then","data","results","nameList","map","aName","name","first","last"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,EAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;;;AAIA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCH,QAAQ,CAAC,EAAD,CAA/C,CAFgB,CAGnB;;AACID,EAAAA,SAAS,CAAC,MAAM;AACb;AACAK,IAAAA,KAAK,CAAC,4BAAD,EAA+B;AAChCC,MAAAA,MAAM,EAAE,KADwB;AACjB;AACfC,MAAAA,IAAI,EAAE,SAF0B;AAGhCC,MAAAA,OAAO,EAAG;AACN,wBAAgB,kBADV;AAEN,kBAAU;AAFJ,OAHsB,CAM5B;;AAN4B,KAA/B,CAAL,CAQKC,IARL,CAQUC,IAAI,IAAMN,eAAe,CAACD,YAAY,IAAE,CAAC,GAAGA,YAAJ,EAAiBO,IAAI,CAACC,OAAL,CAAa,CAAb,CAAjB,CAAf,CARnC,EAFa,CAajB;AACC,GAdS,EAcP,EAdO,CAAT;AAiBD,sBACA;AAAA,2BACJ;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACA;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAcA;AAAA,kBAEOC,QAAQ,CAACC,GAAT,CAAcC,KAAD,IAAS;AACpB;AAAC,kBAAC,KAAD;AAAO,YAAA,IAAI,EAAEA,KAAK,CAACC,IAAN,CAAWC,KAAxB;AAA+B,YAAA,GAAG,EAAEF,KAAK,CAACC,IAAN,CAAWE;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAAD;AAEA,SAHF;AAFP;AAAA;AAAA;AAAA;AAAA,cAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UADA;AA6BH;;GAlDQf,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import { Variables } from \"./Variables\";\r\nimport { React,useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nfunction Customer() {\r\n\r\n    const [customerList,setCustomerList] = useState([]);\r\n // this will call when the state is updated everytime\r\n     useEffect(() => {\r\n        // GET request using fetch inside useEffect React hook\r\n        fetch('https://randomuser.me/api/', {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'no-cors', \r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n               }// no-cors, *cors, same-origin\r\n          })\r\n            .then(data =>   setCustomerList(customerList=>[...customerList,data.results[0]])        \r\n            );\r\n            \r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n\r\n\r\n    return(\r\n    <div>\r\n<table className=\"table table-striped\">\r\n<thead>\r\n    <tr>\r\n        <th>\r\n            Name\r\n        </th>\r\n        <th>\r\n            Address\r\n        </th>\r\n        <th>\r\n            Email\r\n        </th>\r\n    </tr>\r\n</thead>\r\n<tbody>\r\n    {\r\n       nameList.map((aName)=>{\r\n         (<Names name={aName.name.first} age={aName.name.last}/>\r\n        );\r\n        })\r\n    }\r\n</tbody>\r\n</table>\r\n\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Customer;"]},"metadata":{},"sourceType":"module"}